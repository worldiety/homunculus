description = "code parser and generator to improve static compilation experience"

apply plugin: 'application'
mainClassName = "org.homunculus.codegen.Test"


configurations {
    // configuration that holds jars to include in the jar
    extraLibs

}



dependencies {
    implementation(project(":hcf-core"))
    implementation(project(":hcf-context"))
    implementation(project(":hcf-api-spring"))

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.github.javaparser:javaparser-core:3.17.0'
    implementation 'com.github.javaparser:java-symbol-solver-core:0.6.3'
    implementation 'com.helger:jcodemodel:3.0.1'
    implementation 'com.google.android:android:4.1.1.4'
    implementation 'javax.inject:javax.inject:1'


    //this is for @PostConstruct or @PreDestroy
    implementation 'javax.annotation:jsr250-api:1.0'
  //  implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation gradleApi()
    implementation 'com.android.tools.build:gradle:7.0.0'

    //if you have a cyclic compilation dependency problem uncomment the following line and do a "make"
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    extraLibs fileTree(dir: 'libs', include: ['*.jar'])


}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


/*
jar {
    manifest {
        attributes(
                'Main-Class': 'my.project.main',
        )
    }
}

 */
/*
task fatJar(type: Jar) {
    //manifest.from jar.manifest
    archiveClassifier.set('all')
    from { configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

 */








//publishing
/*
ext {
    PUBLISH_GROUP_ID = 'io.homunculus'
    PUBLISH_ARTIFACT_ID = 'hcf-codegen'
    PUBLISH_VERSION = project.version
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"


 */

