

buildscript {
    repositories {
        //jcenter()
        google()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
        //classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0"
        //classpath "com.github.dcendents:android-maven-gradle-plugin:2.0"
        classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'

    }
}
plugins {
    id "java-library"
    id "maven-publish"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "signing"
}

allprojects {
    repositories {
        //jcenter()
        mavenCentral()
        google()
        //maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    version = '0.0.104'
}
subprojects {


}

//apply plugin: 'io.github.gradle-nexus.publish-plugin'

configure(allprojects) { project ->
    if (!project.name.contains("android")) {

        apply plugin: "java"


        compileJava {
            sourceCompatibility = 1.8
            targetCompatibility = 1.8
            options.encoding = 'UTF-8'


        }
        repositories {
            mavenCentral()
        }

        dependencies {
            implementation 'com.google.code.findbugs:jsr305:3.0.2'
            implementation 'org.slf4j:slf4j-api:1.7.30'
            implementation 'org.slf4j:slf4j-simple:1.7.28'
            testImplementation 'junit:junit:4.13.2'
        }


    }

    def artifactProjects = ['hcf-core', 'hcf-context', 'hcf-api-spring', 'hcf-codegen']


    if (artifactProjects.contains(project.name)) {

        //group = "org.homunculusframework"


        //apply plugin: 'maven-publish'

        //apply plugin: 'com.jfrog.bintray'

        // custom tasks for creating source/javadoc jars
/*
        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        // add javadoc/source jar tasks as artifacts
        artifacts {
            archives sourcesJar, javadocJar
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    if (plugins.hasPlugin('war')) {
                        from components.web
                    } else {
                        from components.java
                    }

                    artifact sourcesJar
                    artifact javadocJar
                }
            }
        }

 */


        //publish
        /*
        ext {
            PUBLISH_GROUP_ID = 'io.homunculus'
            PUBLISH_ARTIFACT_ID = project.name
            PUBLISH_VERSION = '0.0.104'
        }

         */

        //apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"



        //nano ~/.gradle/gradle.properties
        /*bintray {
            user = bintray_user
            key = bintray_key
            publications = ['mavenJava']
            publish = true
            //configurations = ['archives']
            pkg {
                websiteUrl = 'http://homunculus.io/'
                repo = 'homunculus'
                name = project.name
                userOrg = 'worldiety'
                publicDownloadNumbers = true
                licenses = ['Apache-2.0']
                vcsUrl = 'https://github.com/worldiety/homunculus.git'
                version {
                    name = project.version
                }
            }
        }

         */

    }

}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

apply from: "${rootDir}/scripts/publish-root.gradle"






