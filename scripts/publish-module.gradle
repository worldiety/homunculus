apply plugin: 'maven-publish'
apply plugin: 'signing'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar) {
    duplicatesStrategy = 'include'
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
/*
java {
    withJavadocJar()
    withSourcesJar()
}



 */


// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                if (project.plugins.hasPlugin('war')) {
                    from components.web
                } else {
                    from components.java
                }

                artifact sourcesJar
                artifact javadocJar

                pom {
                    signing {
                        sign publishing.publications.maven
                        sign configurations.archives
                    }
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Building large scale Android Apps with homunculus'
                    url = 'https://github.com/worldiety/homunculus'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Christopher Heyn'
                            email = 'Christopher.Heyn@worldiety.de'
                        }
                        developer {
                            name = 'Torben Schinke'
                            email = 'Torben.Schinke@worldiety.de'
                        }
                    }
                    scm {
                        connection = 'https://github.com/worldiety/homunculus.git'
                        developerConnection = 'scm:git:ssh://github.com/worldiety/homunculus.git'
                        url = 'https://github.com/worldiety/homunculus'
                    }

                }
            }
        }
        repositories {
            maven {
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = properties.getProperty('ossrhUsername')
                    password = properties.getProperty('ossrhPassword')
                }
            }
        }
    }
}

