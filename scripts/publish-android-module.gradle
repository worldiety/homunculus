apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
    }
}


// add javadoc/source jar tasks as artifacts
artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Building large scale Android Apps with homunculus'
                    url = 'https://github.com/worldiety/homunculus'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Christopher Heyn'
                            email = 'Christopher.Heyn@worldiety.de'
                        }
                        developer {
                            name = 'Torben Schinke'
                            email = 'Torben.Schinke@worldiety.de'
                        }
                    }
                    scm {
                        connection = 'https://github.com/worldiety/homunculus.git'
                        developerConnection = 'scm:git:ssh://github.com/worldiety/homunculus.git'
                        url = 'https://github.com/worldiety/homunculus'
                    }
/*
                    withXml {
                        // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                        def dependenciesNode = asNode.appendNode('dependencies')
                        project.configurations.implementation.allDependencies.each {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
 */
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.secretKeyRingFile"],
            rootProject.ext["signing.password"],
    )
    sign publishing.publications
}


