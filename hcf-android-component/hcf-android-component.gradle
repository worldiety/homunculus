apply plugin: 'com.android.library'
apply plugin: 'signing'

//apply plugin: 'com.github.dcendents.android-maven'


android {
    compileSdk 31

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    lintOptions {
        abortOnError false
    }
}


apply plugin: 'maven-publish'
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
group = 'io.homunculus'
//group = "org.homunculusframework"


task sourcesJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveClassifier.set('sources')
   // if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
  //  } else {
        // For pure Kotlin libraries, in case you have them
  //      from sourceSets.main.java.srcDirs
  //  }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}




task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

/*

task androidJavadocs(type: Javadoc, dependsOn: 'assembleRelease') {
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    source = android.sourceSets.main.java.srcDirs
  //  exclude '**///R.html', '**/R.*.html', '**/index.html'
//}




// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar//, javadocJar

}


afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                //groupId group
                //artifactId project.name
                //version project.version

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }
                artifact sourcesJar
//                artifact androidJavadocsJar
             //   artifact javadocJar

                pom.withXml {
                    def depenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                    // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        def dependencyNode = depenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                pom {
                    signing {
                        sign publishing.publications.maven
                        sign configurations.archives
                    }
                    name = project.name
                    description = 'Building large scale Android Apps with homunculus'
                    url = 'https://github.com/worldiety/homunculus'

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Torben Schinke'
                            email = 'Torben.Schinke@worldiety.de'
                        }
                    }
                    scm {
                        connection = 'https://github.com/worldiety/homunculus.git'
                        developerConnection = 'scm:git:ssh://github.com/worldiety/homunculus.git'
                        url = 'https://github.com/worldiety/homunculus'
                    }

                }


            }
        }
//        println configurations.runtime.allDependencies
        repositories {
            maven {
                url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = properties.getProperty('ossrhUsername')
                    password = properties.getProperty('ossrhPassword')
                }
            }
        }
    }
}


dependencies {
    implementation(project(":hcf-core"))
    implementation(project(":hcf-context"))
    implementation(project(":hcf-android-core"))
    implementation(project(":hcf-api-spring"))

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.test:monitor:1.5.0'
    implementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.4.0'
    androidTestImplementation 'junit:junit:4.12'

    compileOnly 'com.google.android.material:material:1.4.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'junit:junit:4.13.2'

    //avoid direct dependency for various jsr' standards, which may be provided already by the runtime
    compileOnly 'javax.inject:javax.inject:1'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

    //this is for the validator and it's annotations
    /*
    compileOnly 'org.hibernate:hibernate-validator:7.0.2.Final'
    compileOnly 'org.hibernate:hibernate-validator-annotation-processor:7.0.2.Final'
    annotationProcessor 'org.hibernate:hibernate-validator-annotation-processor:7.0.2.Final'
    compileOnly 'org.glassfish:jakarta.el:4.0.1'


     */


    implementation 'org.hibernate:hibernate-validator:5.1.3.Final'
    implementation 'org.hibernate:hibernate-validator-annotation-processor:5.1.3.Final'
    annotationProcessor 'org.hibernate:hibernate-validator-annotation-processor:5.1.3.Final'
    implementation 'org.glassfish.web:javax.el:2.2.4'


    //the logger
    compileOnly 'org.slf4j:slf4j-simple:1.7.28'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    //testImplementation group: 'junit', name: 'junit', version:'4.13.2'
    //annotationProcessor 'org.projectlombok:lombok:1.12.2'
}

// Publishing
/*
ext {
    PUBLISH_GROUP_ID = 'io.homunculus'
    PUBLISH_ARTIFACT_ID = 'hcf-android-component'
    PUBLISH_VERSION = project.version
}
apply from: "${rootProject.projectDir}/scripts/publish-android-module.gradle"


 */


